# OpenLDAP configuration for development
# Based on helm-openldap/openldap-stack-ha chart (jp-gouin)
#
# IMPORTANT NOTES:
# 1. This configuration uses osixia/openldap image (not bitnami)
# 2. The chart configures container ports as 1389/1636, but osixia listens on 389/636
# 3. Applications should use the headless service endpoint for reliable connectivity:
#    openldap-0.openldap-headless.ldap.svc.cluster.local:389
# 4. Custom LDIF files are automatically loaded on container startup via LDAP_SEED_INTERNAL_LDIF_PATH
#    The Helm chart mounts customLdifFiles to /ldifs/, and osixia/openldap auto-loads them
#
# Domain Configuration: dc=ldap,dc=localhost
# Base DN for users: ou=people,dc=ldap,dc=localhost
# Base DN for groups: ou=groups,dc=ldap,dc=localhost

# Global OpenLDAP configuration (used by Helm chart)
global:
  ldapDomain: "ldap.localhost"
  ldapPort: 389
  sslLdapPort: 636
  adminUser: "admin"
  adminPassword: "password"
  configUser: "admin" 
  configPassword: "password"

# Deployment configuration
replicaCount: 1 # Single replica for development

# Image configuration
image:
  repository: osixia/openldap
  tag: 1.5.0
  pullPolicy: IfNotPresent

# Container ports for osixia image (different from bitnami)
containerPorts:
  ldapPort: 389
  sslLdapPort: 636

# LDAP Environment variables
env:
  LDAP_LOG_LEVEL: "256"
  LDAP_ORGANISATION: "Local Development"
  LDAP_DOMAIN: "ldap.localhost"
  LDAP_READONLY_USER: "false"
  LDAP_BACKEND: "mdb"
  LDAP_TLS: "false"
  LDAP_TLS_ENFORCE: "false"
  CONTAINER_LOG_LEVEL: "4"
  KEEP_EXISTING_CONFIG: "false"
  LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
  LDAP_ROOT: "dc=ldap,dc=localhost"
  # Auto-load LDIF files from /ldifs directory on container startup
  LDAP_SEED_INTERNAL_LDIF_PATH: "/ldifs"

# Custom LDIF files to initialize users and groups
customLdifFiles:
  01-users.ldif: |-
    # People organizational unit
    dn: ou=people,dc=ldap,dc=localhost
    objectClass: organizationalUnit
    ou: people

    # LDAP Admin user (for binding)
    dn: cn=admin,dc=ldap,dc=localhost
    objectClass: person
    objectClass: inetOrgPerson
    sn: Administrator
    cn: admin
    uid: admin
    mail: admin@local.dev
    businessCategory: admin
    userpassword: password

    # Developer user 1 (Super Admin)
    dn: cn=developer1,ou=people,dc=ldap,dc=localhost
    objectClass: person
    objectClass: inetOrgPerson
    sn: Developer
    cn: developer1
    uid: developer1
    mail: dev1@local.dev
    businessCategory: dev
    userpassword: password

    # Developer user 2 (Admin)
    dn: cn=developer2,ou=people,dc=ldap,dc=localhost
    objectClass: person
    objectClass: inetOrgPerson
    sn: Developer
    cn: developer2
    uid: developer2
    mail: dev2@local.dev
    businessCategory: dev
    userpassword: password

    # Regular user
    dn: cn=user1,ou=people,dc=ldap,dc=localhost
    objectClass: person
    objectClass: inetOrgPerson
    sn: User
    cn: user1
    uid: user1
    mail: user1@local.dev
    businessCategory: user
    userpassword: password

    # Groups organizational unit
    dn: ou=groups,dc=ldap,dc=localhost
    objectClass: organizationalUnit
    ou: groups

    # Super admins group
    dn: cn=super-admins,ou=groups,dc=ldap,dc=localhost
    objectClass: groupOfNames
    cn: super-admins
    member: cn=developer1,ou=people,dc=ldap,dc=localhost

    # Admins group
    dn: cn=admins,ou=groups,dc=ldap,dc=localhost
    objectClass: groupOfNames
    cn: admins
    member: cn=developer2,ou=people,dc=ldap,dc=localhost

    # Users group
    dn: cn=users,ou=groups,dc=ldap,dc=localhost
    objectClass: groupOfNames
    cn: users
    member: cn=user1,ou=people,dc=ldap,dc=localhost

# Service configuration
service:
  type: ClusterIP
  ldapPort: 389
  enableLdapPort: true
  enableSslLdapPort: true

# Resource limits
resources:
  limits:
    cpu: 200m
    memory: 256Mi
  requests:
    cpu: 50m
    memory: 128Mi

# Disable default probes and use custom ones for osixia image
livenessProbe:
  enabled: false
readinessProbe:
  enabled: false  
startupProbe:
  enabled: false

# Custom probes for osixia/openldap image - use exec to check if slapd process is running
customLivenessProbe:
  exec:
    command:
    - pgrep
    - -f
    - slapd
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 10

customReadinessProbe:
  exec:
    command:
    - pgrep
    - -f
    - slapd
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 10

customStartupProbe:
  exec:
    command:
    - pgrep
    - -f
    - slapd
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  successThreshold: 1
  failureThreshold: 30

ltb-passwd:
  enabled: false

phpldapadmin:
  enabled: true
  env:
    PHPLDAPADMIN_LDAP_CLIENT_TLS_REQCERT: "never"
    # Configure phpLDAPadmin to connect to OpenLDAP with correct domain
    PHPLDAPADMIN_LDAP_HOSTS: "#PYTHON2BASH:[{ 'openldap-0.openldap-headless.ldap.svc.cluster.local': [{'server': [{'tls': False},{'port':389}]},{'login': [{'bind_id': 'cn=admin,dc=ldap,dc=localhost'}]}]}]"
  ingress:
    enabled: true
    annotations: {}
    ingressClassName: nginx
    path: /
    pathType: Prefix
    hosts:
    - ldap.localhost
    tls: []
